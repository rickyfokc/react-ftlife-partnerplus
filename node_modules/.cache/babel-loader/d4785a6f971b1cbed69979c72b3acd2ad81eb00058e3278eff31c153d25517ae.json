{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kelvin Lam\\\\Documents\\\\GitHub\\\\react-ftlife-partnerplus\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport '../css/LoginFormcss.css';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loginUser(credentials) {\n  return fetch('https://www.mecallapi.com/api/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\nfunction LoginForm() {\n  _s();\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await loginUser({\n      username,\n      password\n    });\n    if ('accessToken' in response) {\n      swal(\"Success\", response.message, \"success\", {\n        buttons: false,\n        timer: 2000\n      }).then(value => {\n        localStorage.setItem('accessToken', response['accessToken']);\n        localStorage.setItem('user', JSON.stringify(response['user']));\n        window.location.href = \"/home\";\n      });\n    } else {\n      swal(\"Failed\", response.message, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper d-flex align-items-center justify-content-center w-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            as: Col,\n            md: \"12\",\n            controlId: \"validationCustom01\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"text\",\n              placeholder: \"Username\",\n              onChange: e => {\n                setUserName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Username cannot be empty!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            md: \"12\",\n            controlId: \"validationCustom02\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              children: \"Looks good!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Password cannot be empty!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            required: true,\n            label: \"Agree to terms and conditions\",\n            feedback: \"You must agree before submitting.\",\n            feedbackType: \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"test\",\n          type: \"submit\",\n          children: \"Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Button","Col","Form","Row","swal","axios","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","LoginForm","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","response","message","buttons","timer","value","localStorage","setItem","window","location","href","target"],"sources":["C:/Users/Kelvin Lam/Documents/GitHub/react-ftlife-partnerplus/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport '../css/LoginFormcss.css'\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nasync function loginUser(credentials) {\r\n  return fetch('https://www.mecallapi.com/api/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(credentials)\r\n  })\r\n    .then(data => data.json())\r\n }\r\n\r\nfunction LoginForm() {\r\n\r\n  const [username, setUserName] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await loginUser({\r\n      username,\r\n      password\r\n    });\r\n    if ('accessToken' in response) {\r\n      swal(\"Success\", response.message, \"success\", {\r\n        buttons: false,\r\n        timer: 2000,\r\n      })\r\n      .then((value) => {\r\n        localStorage.setItem('accessToken', response['accessToken']);\r\n        localStorage.setItem('user', JSON.stringify(response['user']));\r\n        window.location.href = \"/home\";\r\n      });\r\n    } else {\r\n      swal(\"Failed\", response.message, \"error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper d-flex align-items-center justify-content-center w-100'>\r\n      <div className='login'>\r\n      <h2 className='mb-3'>Login</h2>\r\n      <Form noValidate  onSubmit={handleSubmit}>\r\n        <Row className=\"mb-3\">\r\n          <Form.Group noValidate  onSubmit={handleSubmit} as={Col} md=\"12\" controlId=\"validationCustom01\">\r\n            <Form.Label>Account</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={e => {setUserName(e.target.value);\r\n                }\r\n              }\r\n            />\r\n            <Form.Control.Feedback>\r\n              Looks good!\r\n            </Form.Control.Feedback>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Username cannot be empty!\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <Form.Control.Feedback>\r\n              Looks good!\r\n            </Form.Control.Feedback>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Password cannot be empty!\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Row>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Check\r\n            required\r\n            label=\"Agree to terms and conditions\"\r\n            feedback=\"You must agree before submitting.\"\r\n            feedbackType=\"invalid\"\r\n          />\r\n        </Form.Group>\r\n        <Button  className=\"test\" type=\"submit\">Login </Button>\r\n      </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}