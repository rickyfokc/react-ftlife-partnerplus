{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kelvin Lam\\\\Documents\\\\GitHub\\\\react-ftlife-partnerplus\\\\src\\\\page\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport PlusNavbar from '../components/PlusNavbar';\nimport LoadingScreen from '../components/LoadingScreen';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRedirected, setIsRedirected] = useState(false);\n  const token = Cookies.get(\"PLUSID\");\n  useEffect(() => {\n    if (!token) {\n      window.location.href = \"/\";\n    } else {\n      setIsLoading(true);\n      fetch('http://localhost:8080/token', {\n        method: 'POST',\n        headers: {\n          'Authorization': `plus ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        setUsername(data.username);\n        setIsLoading(false);\n        setIsRedirected(true);\n      }).catch(error => {\n        console.error(error);\n        setIsLoading(false);\n      });\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this) : isRedirected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlusNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false);\n}\n_s(Home, \"R8pYrf1w6Vsl/jI5FXatH0i00jE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Cookies","PlusNavbar","LoadingScreen","Home","username","setUsername","isLoading","setIsLoading","isRedirected","setIsRedirected","token","get","window","location","href","fetch","method","headers","then","response","json","data","catch","error","console"],"sources":["C:/Users/Kelvin Lam/Documents/GitHub/react-ftlife-partnerplus/src/page/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport PlusNavbar from '../components/PlusNavbar';\r\nimport LoadingScreen from '../components/LoadingScreen';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction Home() {\r\n  const [username, setUsername] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isRedirected, setIsRedirected] = useState(false);\r\n  const token = Cookies.get(\"PLUSID\");\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      window.location.href = \"/\";\r\n    } else {\r\n      setIsLoading(true);\r\n      fetch('http://localhost:8080/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `plus ${token}`,\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setUsername(data.username);\r\n          setIsLoading(false);\r\n          setIsRedirected(true);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <>\r\n      { isLoading ? <LoadingScreen /> : \r\n        isRedirected ? (\r\n          <>\r\n            <PlusNavbar />\r\n            <h1>{username}</h1>\r\n          </>\r\n        ) : null\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAO,kCAAkC;AAAC;AAAA;AAE1C,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMY,KAAK,GAAGV,OAAO,CAACW,GAAG,CAAC,QAAQ,CAAC;EAEnCZ,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,KAAK,EAAE;MACVE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC5B,CAAC,MAAM;MACLP,YAAY,CAAC,IAAI,CAAC;MAClBQ,KAAK,CAAC,6BAA6B,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAG,QAAOP,KAAM;QACjC;MACF,CAAC,CAAC,CACCQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZhB,WAAW,CAACgB,IAAI,CAACjB,QAAQ,CAAC;QAC1BG,YAAY,CAAC,KAAK,CAAC;QACnBE,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBhB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACG,KAAK,CAAC,CAAC;EAEX,oBACE;IAAA,UACIJ,SAAS,gBAAG,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG,GAC7BE,YAAY,gBACV;MAAA,wBACE,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd;QAAA,UAAKJ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA,gBAClB,GACD;EAAI,iBAET;AAEP;AAAC,GA1CQD,IAAI;AAAA,KAAJA,IAAI;AA4Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}