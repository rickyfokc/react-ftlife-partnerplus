{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { forwardRef } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { HelperText } from '../HelperText';\nexport const TextInput = forwardRef((_ref, ref) => {\n  let {\n    sizing = 'md',\n    shadow,\n    helperText,\n    addon,\n    icon: Icon,\n    rightIcon: RightIcon,\n    color = 'gray',\n    className,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const theme = mergeDeep(useTheme().theme.textInput, customTheme);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(\"div\", {\n      className: classNames(theme.base, className),\n      children: [addon && _jsx(\"span\", {\n        className: theme.addon,\n        children: addon\n      }), _jsxs(\"div\", {\n        className: theme.field.base,\n        children: [Icon && _jsx(\"div\", {\n          className: theme.field.icon.base,\n          children: _jsx(Icon, {\n            className: theme.field.icon.svg\n          })\n        }), RightIcon && _jsx(\"div\", {\n          \"data-testid\": \"right-icon\",\n          className: theme.field.rightIcon.base,\n          children: _jsx(RightIcon, {\n            className: theme.field.rightIcon.svg\n          })\n        }), _jsx(\"input\", {\n          className: classNames(theme.field.input.base, theme.field.input.colors[color], theme.field.input.withIcon[Icon ? 'on' : 'off'], theme.field.input.withAddon[addon ? 'on' : 'off'], theme.field.input.withShadow[shadow ? 'on' : 'off'], theme.field.input.sizes[sizing]),\n          ...props,\n          ref: ref\n        })]\n      })]\n    }), helperText && _jsx(HelperText, {\n      color: color,\n      children: helperText\n    })]\n  });\n});\nTextInput.displayName = 'TextInput';","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","classNames","forwardRef","mergeDeep","useTheme","HelperText","TextInput","ref","sizing","shadow","helperText","addon","icon","Icon","rightIcon","RightIcon","color","className","theme","customTheme","props","textInput","children","base","field","svg","input","colors","withIcon","withAddon","withShadow","sizes","displayName"],"sources":["C:/Users/Kelvin Lam/Documents/GitHub/react-ftlife-partnerplus/node_modules/flowbite-react/lib/esm/components/TextInput/TextInput.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { forwardRef } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport { useTheme } from '../Flowbite/ThemeContext';\nimport { HelperText } from '../HelperText';\nexport const TextInput = forwardRef(({ sizing = 'md', shadow, helperText, addon, icon: Icon, rightIcon: RightIcon, color = 'gray', className, theme: customTheme = {}, ...props }, ref) => {\n    const theme = mergeDeep(useTheme().theme.textInput, customTheme);\n    return (_jsxs(_Fragment, { children: [_jsxs(\"div\", { className: classNames(theme.base, className), children: [addon && _jsx(\"span\", { className: theme.addon, children: addon }), _jsxs(\"div\", { className: theme.field.base, children: [Icon && (_jsx(\"div\", { className: theme.field.icon.base, children: _jsx(Icon, { className: theme.field.icon.svg }) })), RightIcon && (_jsx(\"div\", { \"data-testid\": \"right-icon\", className: theme.field.rightIcon.base, children: _jsx(RightIcon, { className: theme.field.rightIcon.svg }) })), _jsx(\"input\", { className: classNames(theme.field.input.base, theme.field.input.colors[color], theme.field.input.withIcon[Icon ? 'on' : 'off'], theme.field.input.withAddon[addon ? 'on' : 'off'], theme.field.input.withShadow[shadow ? 'on' : 'off'], theme.field.input.sizes[sizing]), ...props, ref: ref })] })] }), helperText && _jsx(HelperText, { color: color, children: helperText })] }));\n});\nTextInput.displayName = 'TextInput';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}